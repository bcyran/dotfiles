#!/usr/bin/env bash
#
# A script to pause / mute my TV when I play something on my PC
# using philipstv Python package: https://github.com/bcyran/philipstv

progname=$(basename "$0")
readonly progname

mode='pause'

is_tv_on() {
    local status
    if ! status=$(philipstv power get 2> /dev/null); then
        false
    elif [[ "${status}" != 'on' ]]; then
        false
    else
        true
    fi
}

is_tv_muted() {
    if [[ $(philipstv volume get 2> /dev/null) == 0 ]]; then
        true
    else
        false
    fi
}

mute_tv() {
    if ! is_tv_on; then
        return
    fi
    if ! is_tv_muted; then
        philipstv key mute
    fi
}

unmute_tv() {
    if ! is_tv_on; then
        return
    fi
    if is_tv_muted; then
        philipstv key mute
    fi
}

play_tv() {
    if ! is_tv_on; then
        return
    fi
    philipstv key play
}

pause_tv() {
    if ! is_tv_on; then
        return
    fi
    philipstv key pause
}

handle_status() {
    local status
    status=$1
    if [[ "${mode}" == 'pause' ]]; then
        case "${status}" in
            Playing) pause_tv ;;
            Paused | Stopped) play_tv ;;
        esac
    else
        case "${status}" in
            Playing) mute_tv ;;
            Paused | Stopped) unmute_tv ;;
        esac
    fi
}

print_help() {
    echo "Usage: ${progname} [-h|--help] [--mode {pause|mute}]"
    echo "Pause or mute the TV when playback starts on the PC."
}

usage_err() {
    echo "${progname}: $1" >&2
    print_help
    exit 1
}

while [[ "$#" -gt 0 ]]; do
    case "$1" in
        --mode)
            shift
            [[ $1 != 'mute' && $1 != 'pause' ]] && usage_err "invalid mode: '$1'"
            mode=$1
            ;;
        -h | ?-help)
            print_help
            exit 0
            ;;
        *)
            usage_err "invalid argument '$1'"
            ;;
    esac
    shift
done
readonly mode

playerctl --follow status | while read -r status; do
    handle_status "${status}"
done
