# Colors and shortcuts for ls and grep
# alias ls='ls --color=auto'
alias ls="exa --icons"
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias ll='ls -alhF'
alias la='ls -a'
alias l='ls -F'

alias philipstv="python -m philipstv"

# Who has time to keep typing kubectl...
alias k=kubectl

# Git in English, please
alias git="LANG=en_US.UTF-8 git"

# Enable aliases when using sudo
alias sudo='sudo '

# Alias vim to nvim
alias vim='nvim'

# Change directory and list it
function cdl() {
    cd "$@" && ls
}

# Create directory and open it
function mkc() {
    mkdir "$@" && cd "$@"
}

# Function for quick switching between websites on the server
function www() {
    if [ -z $1 ]; then
        cd /srv/www
    else
        cd /srv/www/$1/public_html
    fi
}

# Extract various archives
function extract(){
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xvjf $1    ;;
            *.tar.gz)    tar xvzf $1    ;;
            *.tar.xz)	 tar xvJf $1	;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar x $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xvf $1     ;;
            *.tbz2)      tar xvjf $1    ;;
            *.tgz)       tar xvzf $1    ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)           echo "Unable to extract '$1'" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Source: http://orangesplotch.com/bash-going-up/
# Go up directory tree X number of directories
function up() {
    COUNTER="$@";
    # default $COUNTER to 1 if it isn't already set
    if [[ -z $COUNTER ]]; then
        COUNTER=1
    fi
    # make sure $COUNTER is a number
    if [ $COUNTER -eq $COUNTER 2> /dev/null ]; then
        nwd=`pwd` # Set new working directory (nwd) to current directory
        # Loop $nwd up directory tree one at a time
        until [[ $COUNTER -lt 1 ]]; do
        nwd=`dirname $nwd`
        let COUNTER-=1
        done
        cd $nwd # change directories to the new working directory
    else
    # print usage and return error
    echo "usage: up [NUMBER]"
        return 1
    fi
}
